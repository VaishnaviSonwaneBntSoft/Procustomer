name: Java and React CI with Gradle

# Trigger the workflow on pushes to the main and development branches,
# and on pull requests targeting the main branch.
on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    # Use the latest Ubuntu environment for the job
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # Check out the repository code
    - uses: actions/checkout@v4

    # Set up JDK 21 using the Microsoft distribution
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'microsoft'

    # Set up Gradle, with caching for dependencies
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    # Build the Java (Spring Boot) application using the Gradle wrapper
    - name: Build with Gradle Wrapper
      run: |
        pwd
        chmod 755 ./gradlew
        ls -ltra
        ./gradlew build

    # Set up Node.js to build the React application
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    # Install npm dependencies for the React application
    - name: Install npm dependencies
      working-directory: ./app
      run: npm install

    # Build the React application
    - name: Build React Application
      working-directory: ./app
      run: npm run build

    # Run SonarQube analysis after the build
    - name: Quality Check
      run: |
        pwd
        chmod 755 ./gradlew
        ls -ltra
        ./gradlew sonar
  
    # Check the SonarQube Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: /home/runner/work/ProCUSTOMER/ProCUSTOMER/build/sonar/report-task.txt
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.PC_SONAR_TOKEN }}
        SONAR_HOST_URL: "http://49.248.202.218:9001/"

    # Optionally you can use the output from the Quality Gate in another step.
    # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
    - name: "Example show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  dependency-submission:

    # Use the latest Ubuntu environment for the job
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    # Check out the repository code
    - uses: actions/checkout@v4

    # Set up JDK 21 using the Microsoft distribution
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'microsoft'

    # Generate and submit the dependency graph for Dependabot alerts
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
